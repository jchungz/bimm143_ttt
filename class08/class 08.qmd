---
title: "Class 8 Breast Cancer Mini Project"
author: "jaimy chung (A16366976)"
format: pdf
editor: visual
---

## 

Before we dive into breast cancer project, we will finish class 7 (where we left off) first.

```{r}
url2 <- "https://tinyurl.com/expression-CSV"
rna.data <- read.csv(url2, row.names=1)
head(rna.data)
```
> Q10: How many genes and samples are in this data set?
6 genes and 10 samples

##Run PCA

```{r}
## Again we have to take the transpose of our data
pca <- prcomp(t(rna.data), scale=TRUE)

## Simple unpolished plot of pc1 and pc2
plot(pca$x[,1], pca$x[,2], xlab="PC1", ylab="PC2")
```
```{r}
summary(pca)
```
```{r}
# We have 5wt and 5ko samples
mycols <- c(rep("blue",5), rep("red",5))
mycols

plot(pca$x[,1], pca$x[,2], xlab="PC1", ylab="PC2", col = mycols)
```

I could examine which genes contribute to this first PC

```{r}
head(sort(abs(pca$rotation[,1]), decreasing = T))
```

#Analysis of Breast Cancer FNA data

```{r}
# Save your input data file into your Project directory
fna.data <- "WisconsinCancer.csv"

# Complete the following code to input the data and store as wisc.df
wisc.df <- read.csv(fna.data, row.names=1)
head(wisc.df)
```

```{r}
diagnosis <- as.factor(wisc.df$diagnosis)
```

Note that the first column here wisc.df$diagnosis is a pathologist provided expert diagnosis.

Now I want to make sure I remove that column from my sataset for analysis

```{r}
wisc.data <- wisc.df[,-1]
head(wisc.data)
```



Q1. How many observations are in this dataset?

```{r}
nrow(wisc.df)
```

There are 569 observations

Q2. How many of the observations have a malignant diagnosis?

```{r}
table(wisc.df$diagnosis)
```

There are 212 malignant diagnosis.

Q3. How many variables/features in the data are suffixed with _mean?

```{r}
colnames(wisc.data)
```
```{r}
grep("_mean", colnames(wisc.data), value=TRUE)
```

There are 10 variables/features in the data that are suffixed with "_mean"


## Principal Component Analysis

Here we will use `prcomp()` on the `wisc.data` object - the one without the diagnosis column.

First, we have to decide whether to use the `scale=TRUE` argument when we run `prcomp()`.

We can look at the means and sd of each column. If they are similar then we are all good to go. If not we should use `scale=TRUE`

```{r}
colMeans(wisc.data)
```

```{r}
apply(wisc.data,2,sd)
```

These are very different so we should scale=TRUE.

```{r}
wisc.pr <- prcomp(wisc.data, scale=TRUE)
summary(wisc.pr)
```


Q4. From your results, what proportion of the original variance is captured by the first principal components (PC1)?

44.47% is captured by PC1

Q5. How many principal components (PCs) are required to describe at least 70% of the original variance in the data?

3 PCs are required to describe at least 70% of original variance in the data set

Q6. How many principal components (PCs) are required to describe at least 90% of the original variance in the data?

7 PCs are required to describe at least 90% of the orginial variance in the data



### Plotting the PCA results

```{r}
#biplot(wisc.pr)
```

Q7. What stands out to you about this plot? Is it easy or difficult to understand? Why?

It's a hot mess, difficult to understand because it's meant for small data sets.


We need to make our own plot.

```{r}
attributes(wisc.pr)
```

```{r}
plot(wisc.pr$x[,1], wisc.pr$x[,2], col=diagnosis,
     xlab = "PC1", ylab = "PC2")
```

```{r}
library(ggplot2)

pc <- as.data.frame(wisc.pr$x)

ggplot(pc) +
  aes(PC1, PC2, col=diagnosis) + 
  geom_point()
```

Q8. Generate a similar plot for principal components 1 and 3. What do you notice about these plots?

```{r}
plot(wisc.pr$x[,1], wisc.pr$x[,3], col=diagnosis,
     xlab = "PC1", ylab = "PC3")
```

There is a distinct separation between benign and malignant tumors. Both plots look similar to each other. Cells with similar characteristics should cluster together.



### Communicating PCA results

Q9. For the first principal component, what is the component of the loading vector (i.e. wisc.pr$rotation[,1]) for the feature concave.points_mean?

```{r}
wisc.pr$rotation["concave.points_mean",1]
```


Q10. What is the minimum number of principal components required to explain 80% of the variance of the data?

5 PCs are required to explain 80% of the variance of the data

```{r}
tbl <- summary(wisc.pr)
which(tbl$importance[3,] > 0.8)[1]
```



## Hierarchial Clustering

The main function for Hierarchial Clustering is called `hclust()` which takes a distance matrix as input.

```{r}
d <- dist(scale(wisc.data))
wisc.hclust <- hclust(d)
plot(wisc.hclust)
```
```{r}
plot(wisc.hclust)
abline(h=18, col="red")
grps <- cutree(wisc.hclust, h=18)
table(grps)
```

Come back here later to see how our cluster grps correspond to M or B groups.





Q11. Using the plot() and abline() functions, what is the height at which the clustering model has 4 clusters?

Around 18

## 5. Combining Methods

Here we will perform clustering on our PCA results rather than the original data.

In other words we will cluster using `wisc.pr$x` - our new better variable or PCs. We can chose as many or as few PCs to use as we like. It is your call!

```{r}
d.pc <- dist(wisc.pr$x[, 1:3])

wisc.pr.hclust <- hclust( d.pc, method="ward.D2")
plot(wisc.pr.hclust)
abline(h=80, col="red")
```
```{r}
grps <- cutree(wisc.pr.hclust, h=80)
table(grps)
```

We can use `table()` function to make a cross-table as well as just a count table.

```{r}
table(diagnosis)
```
```{r}
table(grps, diagnosis)
```
Q12. Can you find a better cluster vs diagnoses match by cutting into a different number of clusters between 2 and 10?

Q13. Which method gives your favorite results for the same data.dist dataset? Explain your reasoning.

Maybe the average just because it's simple and straight-forward and is the only one that I really remember.

Write a note here about how to read this cross-table result.
The results indicate that our cluster 1 mostly captures cancer (M) and our cluster 2 mostly captures healthy (B) samples/individuals.


##7. Prediction

```{r}
#url <- "new_samples.csv"
url <- "https://tinyurl.com/new-samples-CSV"
new <- read.csv(url)
npc <- predict(wisc.pr, newdata=new)
npc
```

And plot this up
```{r}
plot(wisc.pr$x[,1:2], col=grps)
points(npc[,1], npc[,2], col="blue", pch=16, cex=3)
text(npc[,1], npc[,2], c(1,2), col="white")
```
Q18. Which of these new patients should we prioritize for follow up based on your results?

Patient 2