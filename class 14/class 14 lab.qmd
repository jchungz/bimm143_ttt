---
title: "Class 14 : RNASeq Mini Project"
author: "Jaimy Chung (A16366976)"
format: pdf
editor: visual
---

Run a complete RNASeq analysis workflow from counts to enriched genesets...

## Data import

```{r}
library(DESeq2)
```

```{r}
counts <- read.csv("GSE37704_featurecounts.csv", row.names = 1)
metadata <- read.csv("GSE37704_metadata.csv")
```

## Data Exploration

```{r}
head(counts, 3)
```
```{r}
head(metadata)
```


```{r}
metaFile <- "GSE37704_metadata.csv"
countFile <- "GSE37704_featurecounts.csv"
```

```{r}
# Import metadata and take a peak
colData = read.csv(metaFile, row.names=1)
head(colData)
```

Check if the colData and countData match up 

```{r}
metadata$id
```

```{r}
#RM first column
countdata <- counts[, -1]
```


Now check if the metadata and count 
```{r}
all(colnames(countdata) == metadata$id)
```
We need to remove all the zero count genes. 

```{r}
head(countdata, 3)
```
To identify these zero count genes we can sum across the rows and check if the sum is more than zero.

```{r}
to.keep.inds <- rowSums(countdata) > 0
nonzerocounts <- countdata[to.keep.inds,]
```


## DESeq setup and analysis

```{r}
dds <- DESeqDataSetFromMatrix(countData = nonzerocounts,
                              colData = metadata, 
                              design=~condition)
dds = DESeq(dds)
```

```{r}
dds <- DESeq(dds)
dds
```


## Result extraction

```{r}
res <- results (dds)
head(res)
```

```{r}
res = results(dds, contrast=c("condition", "hoxa1_kd", "control_sirna"))
```

```{r}
summary(res)
```

## Volcano Plot

```{r}
plot( res$log2FoldChange, -log(res$padj) )
```

```{r}
# Make a color vector for all genes
mycols <- rep("gray", nrow(res) )

# Color red the genes with absolute fold change above 2
mycols[ abs(res$log2FoldChange) > 2 ] <- "red"

# Color blue those with adjusted p-value less than 0.01
#  and absolute fold change more than 2
inds <- (res$padj < 0.01) & (abs(res$log2FoldChange) > 2 )
mycols[ inds ] <- "blue"

plot( res$log2FoldChange, -log(res$padj), col=mycols, xlab="Log2(FoldChange)", ylab="-Log(P-value)" )
```


## Gene annotation

```{r}
library("AnnotationDbi")
library("org.Hs.eg.db")
```

```{r}
columns(org.Hs.eg.db)

res$symbol = mapIds(org.Hs.eg.db,
                    keys=row.names(res), 
                    keytype="ENSEMBL",
                    column="SYMBOL",
                    multiVals="first")

res$entrez = mapIds(org.Hs.eg.db,
                    keys=row.names(res),
                    keytype="ENSEMBL",
                    column="ENTREZID",
                    multiVals="first")

res$name =   mapIds(org.Hs.eg.db,
                    keys=row.names(res),
                    keytype="ENSEMBL",
                    column="GENENAME",
                    multiVals="first")

head(res, 10)
```

```{r}
res = res[order(res$pvalue),]
write.csv(res, file="deseq_results.csv")
```


## Pathway Analysis 

```{r}
#| message : false
library(gage)
library(gageData)
library(pathview)
```

```{r}
data(kegg.sets.hs)
data(sigmet.idx.hs)

# Focus on signaling and metabolic pathways only
kegg.sets.hs = kegg.sets.hs[sigmet.idx.hs]

# Examine the first 3 pathways
head(kegg.sets.hs, 3)
```

Now setup the fold-change "importance" vector required for `gage()`

```{r}
foldchanges = res$log2FoldChange
names(foldchanges) = res$entrez
head(foldchanges)
```

```{r}
# Get the results
keggres = gage(foldchanges, gsets=kegg.sets.hs)
```

```{r}
attributes(keggres)
```

```{r}
# Look at the first few down (less) pathways
head(keggres$less)
```

```{r}
pathview(gene.data=foldchanges, pathway.id="hsa04110")
```
![hsa04110 cell cycle](hsa04110.pathview.png)

```{r}
# A different PDF based output of the same data
pathview(gene.data=foldchanges, pathway.id="hsa04110", kegg.native=FALSE)
```

```{r}
## Focus on top 5 upregulated pathways here for demo purposes only
keggrespathways <- rownames(keggres$greater)[1:5]

# Extract the 8 character long IDs part of each string
keggresids = substr(keggrespathways, start=1, stop=8)
keggresids
```

```{r}
pathview(gene.data=foldchanges, pathway.id=keggresids, species="hsa")
```

![The KEGG cell-cycle pathway ](hsa04640.pathview.png)

```{r}
## Focus on top 5 upregulated pathways here for demo purposes only
keggrespathwaysless <- rownames(keggres$less)[1:5]

# Extract the 8 character long IDs part of each string
keggresidsless = substr(keggrespathwaysless, start=1, stop=8)
keggresidsless
```

```{r}
pathview(gene.data=foldchanges, pathway.id=keggresidsless, species="hsa")
```
![The KEGG cell-cycle pathway lesser ](hsa04110.pathview.png)



### Using Gene Ontology (GO)

```{r}
data(go.sets.hs)
data(go.subs.hs)

# Focus on Biological Process subset of GO
gobpsets = go.sets.hs[go.subs.hs$BP]

gobpres = gage(foldchanges, gsets=gobpsets, same.dir=TRUE)

lapply(gobpres, head)
```


## Reactome Analysis

```{r}
sig_genes <- res[res$padj <= 0.05 & !is.na(res$padj), "symbol"]
print(paste("Total number of significant genes:", length(sig_genes)))
```


```{r}
write.table(sig_genes, file="significant_genes.txt", row.names=FALSE, col.names=FALSE, quote=FALSE)
```


